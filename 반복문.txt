for in 반복문 (배열 요소를 하나하나 꺼네서 특정 문자를 실행할 때 사용)
    - 반복 변수에 인덱스가 들어간다
    문법
    for (const 반복 변수 in 배열 또는 객체) {
        문장
    }

    ex)
    <script>
        const todos = ['할일 1', '할일 2', '할일 3']

        for (const i in todos) {
            console.log(`${i}번째 할 일:${todo[i]}`)
        }
    </script>

======================================================
for of 반복문
    - 반복 변수에 요소의 값이 들어간다
    문법
    for (const 반복 변수 of 배열 또는 객체) {
        문장
    }
    ex)
    <script>
        const todos = ['할일 1', '할일 2', '할일 3']
        
        for (const todo od todos) {
            console.log(`오늘의 할 일: ${todo}`)
        }
    </script>

=====================================================
for 반복문 (특정 횟수만큼 반복)

    for (let i = 0; i < 반복 횟수; i++) {
        문장
    }
    //다른 반복문이 const 로 반복변수를 지정하는 것과 다르게 let 으로 반복 변수를 지정한다
    
    ex)
    <script>
        for (let i=0; i < 5; i++) {
            console.log(`${i}번째 반복입니다.`)
        }
    </script>
    // 이때 반복 변수는 0부터 시작함을 명심하자

    ex) 1~N 까지 더하기

    <script>
    
        let N = 100
        let input = 0
        for (let i = 0; i <= N; i++) {
            input + i
        }
    </script>

    - for 반복문과 배열 조합

    <script>
        const todos = ['우유 구매', '업무 메일 확인하기', '필라테스 수업']

        for (let i = 0; i < todos.length; i++) {
            console.log(`지금 할 일은 $[todos]입니다`) 
        }
    </script>

======================================================
while반복문 ( 불 표현식이 true면 계속해서 문장을 실행)

    문법
    while (불 표현식) {
        문장
    }
    //조건이 변하지 않는다면 무한히 반복 싱행하므로 조건을 거짓으로 만들 수 있는 내용이 문장에 포함되어 있어야 한다
    //(반복문이 무한 반복되는것을 무한루프 라고한다)

    ex) //배열 요소를 하나씩 출력하는 코드
    <script>
        let i = 0
        const array = [1,2,3,4,5]

        while (i < array.length) {
            console.log(`${i} : ${array[i]}`)
            i++
        }
    </script>

===================================================
while 반복문과 배열

    <script>

    let i = 0
    const array = [1, 2, 3, 4, 5]

    while ( i < array.length) {
        console.log(`${i} : ${array[1]}`)
        i++
    }
    <script>

======================================================

break 키워드
    switch 조건문이나 반복문을 벗어날 때 사용

=====================================================

continue 키워드
    반복문 안의 반복 작업을 멈추고 만복문의 처음으로 돌아가 다음 반복 작업을 진행
