- 함수 호출 : 함수를 사용하는 것
- 매개 변수 : 함수를 호출 할 때 괄호에 넣는 여러가지 자료
- 리턴값 : 함수를 호출 해서 최종적으로 나오는 결과

===================================================
익명함수 ( 코드의 집합을 나타내는 자료형)
    문법
    function( ) { }
// 함수를 리터럴 방식으로 만든다
// 함수의 이름이 없다
// 재사용할 수가 없다
//순차적인 코드 실행에서 코드가 해당 줄을 읽을 때 생성된다(위에서부터 차례대로 읽혀진다)
//결과적으로 선언적 함수가 먼저 생성되고 이후 순차적인 코드 진행을 시작하면서 익명 함수를 생성한다.

================================================
- 선언적 함수
    문법
    function ( ) { };

// 순차적인 코드 실행이 일어나기 전에 생성된다

- function 함수  (매개변수, 매개변수) {
    문장
    문장
    return 리턴값
}
ex)
<script>
    function isLeapYear(year) [
        return (year % 4 === 0) && (year % 100 !== 0) || (year % 400 === 0)
        console.log( 2020 년은 윤년인가? === ${issLEapYear(2020)}')
    ]

// 일반적으로 숫자를 계산해서 출력하는 경우
function 함수 (매개변수) {
    let output = 초깃값
    처리한다
    return output
}

======================================================
- 가변 매개변수 함수 : 호출할 때 매개변수의 개수가 고정적이지 않은 함수
- 자바스크립트에서 이러한 함수를 구현할 때는 "나머지 매개변수"라는 문법 사용
    문법
    function 함수 이름(...나머지 매개변수) { }
함수의 매개변수 앞에 마침표 3개(...)를 입력하면 매개변수들이 '배열'로 들어온다

ex)
<script>
    function sample(...items) {
        console.log(items)
    }
    sample(1, 2)
    sample(1, 2, 3)
    sample(1, 2, 3, 4)
</script>

- 나머지 매개변수와 일반 매개변수 조합
    function 함수 이름(매개변수, 매개변수, ...나머지 매개변수) { }
ex)
<script>
    function sample(a, b, ...c) {
        console.log(a, b, c)
    }

    sample(1, 2)
    sample(1, 2, 3)
    sample(1, 2, 3, 4)
    </script>
    --> 함수를 호출할 때 매개변수 a, b가 먼저 들어가고, 남은 것들은 모두 c 배열에 들어간다.

======================================================
정확하게 배열인지 확인 할때 Array.isArray()메소드를 활용.

ex)
<script>
    function min(first, ...rests) {
        // 변수 선언하기
        let output
        let items

        if (Array.isArray(first)) {
            output = first[0]
            items = first
        }
        else if (typeof(first) === 'number') {
            output = first
            items = rests
        }

        for (const item of items) {
            if (output > item) {
                output = item
            }
        }

        return output
    }

    console.log(`min(배열): ${min([52, 273, 32, 103, 275, 24, 57])}`)
    console.log(`min(숫자,...): ${min([52, 273, 32, 103, 275, 24, 57])}`)
</script>

    문법
    Array.isArray(obj)
    // obj (검사할 객체)
    
    반환값
    객체가 Array라면 true, 아니라면 false.
    설명

=====================================================
전개 연산자
함수 이름(...배열)
// 전개연산자(...)을 사용하는 경우 결과 값에서 배열하나가 요소로 들어가 있는 것이 아니라 배열의 각 요소가 하나하나 들어가 있다

=======================================================
기본 매개변수
매개변수에 기본값을 지정하는 것
    문법
    함수 이름(매개변수, 매개변수=기본값, 매개변수=기본값)

=====================================================
콜백 함수 : 매개변수로 전달하는 함수
//나중에 호출되는 함수

//코드를 통해서 명시적으로 호출하는 함수가 아니라, 개발자는 단지 함수를 등록하기만 하고
어떤 이벤트가 발생했거나 특정 시점에 도달했을 때 시스템에서 호출하는 함수를 말한다
즉 특정 문법을 가지고 있는 것이 아니라, 호출방식에 의한 구분이다.

- 콜백 함수를 활용하는 함수
    forEach() 메소드
    단순하게 배열 내부의 요소를 사용해서 콜백 함수를 호출한다
